bindkey esc quit
bindkey 1   show-one
bindkey 2   show-two
bindkey 3   show-three
bindkey q   pop-pager
bindkey S-q quit
bindkey C-r reload
bindkey j   cursor-down
bindkey k   cursor-up
bindkey S-j parent-cursor-down
bindkey S-k parent-cursor-up
bindkey C-e scroll-down
bindkey C-y scroll-up
bindkey C-d page-down
bindkey C-u page-up
bindkey g,g cursor-first-line
bindkey S-g cursor-last-line

mode rat-talk
  annotate external slide   -- regex '(?m)^.+\.md$'

  #bindkey enter slide rat-talk-slide     -- >pandoc -s -t html %(slide) | elinks -dump -dump-color-mode 2

  bindkey enter slide rat-talk-slide -- >pandoc -t plain %(slide)
end

mode rat-talk-slide
  bindkey e -- !vim %(slide)
end

mode test
  annotate match foo -- echo foo

  bindkey b,b foo test -- echo foo %(foo)
  bindkey c   foo test -- echo bar foo
end

mode git.log
  annotate match git.commit -- git rev-list --all --reflog --abbrev=2 --abbrev-commit
  annotate match git.ref    -- git for-each-ref --format='%(refname)%0a%(refname:short)'

  bindkey enter git.commit git.show -- >git show --stat=400 -p %(git.commit) | diff-highlight
  bindkey S-r   git.commit          -- ?!git rebase --interactive %(git.commit)
  bindkey S-f   git.commit          -- ?!git commit --fixup=%(git.commit)
  bindkey S-o   git.commit          -- !xdg-open $(git hub-url --rev %(git.commit))
  bindkey S-u   git.commit          -- !xdg-open $(git hub-url --pull-request $(git pulls-for %(git.commit) | head -1 | sed -e 's/[^/]*\///g'))

  bindkey b git.commit git.blame -- >git blame %(git.commit) -- "%(git.filename)"
  bindkey d git.commit git.diff  -- >git log -p --follow -1 %(git.commit) -- "%(git.filename)" | diff-highlight
end

mode git.show
  annotate match git.filename -- git ls-tree --name-only -r %(git.commit)
  annotate external tracker.story -- regex '#([0-9]+)' --value-match 1

  bindkey enter git.filename git.diff   -- >git log -p --follow -1 %(git.commit) -- "%(git.filename)" | diff-highlight
  bindkey b     git.filename git.blame  -- >git blame %(git.commit) -- "%(git.filename)"
  bindkey l     git.filename git.log    -- >git llll --follow %(git.commit) -- "%(git.filename)"
  bindkey v     git.filename git.source -- >git show %(git.commit):"%(git.filename)"
  bindkey e     git.filename            -- !vim %(git.filename)
  bindkey S-o                           -- !xdg-open $(git hub-url --rev %(git.commit))
  bindkey S-u                           -- !xdg-open $(git hub-url --pull-request $(git pulls-for %(git.commit) | head -1 | sed -e 's/[^/]*\///g'))
  bindkey S-t   tracker.story           -- !xdg-open $(tracker-url %(tracker.story))
end

mode git.blame
  annotate match git.commit -- git log --abbrev=2 --pretty="%h" --follow -- "%(git.filename)"

  bindkey enter git.commit git.show  -- >git show --stat=400 -p %(git.commit) | diff-highlight
  bindkey b     git.commit git.blame -- >git blame %(git.commit) -- "%(git.filename)"
  bindkey S-b   git.commit git.blame -- >git blame %(git.commit)~ -- "%(git.filename)"
  bindkey e     git.filename         -- !vim %(git.filename)
  bindkey S-o   git.commit           -- !xdg-open $(git hub-url --rev %(git.commit))
  bindkey S-u   git.commit           -- !xdg-open $(git hub-url --pull-request $(git pulls-for %(git.commit) | head -1 | sed -e 's/[^/]*\///g'))
end

mode git.diff
  annotate match git.filename -- git ls-tree --name-only -r %(git.commit)

  bindkey b git.filename git.blame -- >git blame %(git.commit) -- "%(git.filename)"
  bindkey l git.filename git.log   -- >git llll %(git.commit) -- "%(git.filename)"
  bindkey e git.filename           -- !vim %(git.filename)
  bindkey S-o                      -- !xdg-open $(git hub-url --rev %(git.commit))
  bindkey S-u                      -- !xdg-open $(git hub-url --pull-request $(git pulls-for %(git.commit) | head -1 | sed -e 's/[^/]*\///g'))
end

mode git.refs
  annotate match git.ref -- git for-each-ref --format='%(refname:short)'

  bindkey f                      -- !git fetch
  bindkey S-f                    -- !git fetch --all
  bindkey enter  git.ref git.log -- >git llll %(git.ref)
  bindkey c      git.ref         -- !git checkout %(git.ref)
  bindkey r      git.ref         -- !git rebase %(git.ref)
  bindkey m      git.ref         -- !git merge %(git.ref)
  bindkey d      git.ref         -- !git branch -d %(git.ref)
  bindkey delete git.ref         -- ?!git branch -D %(git.ref)
end

mode git.source
end

mode git.pulls
  annotate external git.pull -- regex '[0-9]+'

  bindkey l   git.pull git.log -- >git llll origin/pull/%(git.pull)
  bindkey S-o git.pull         -- !xdg-open $(git hub-url --pull-request %(git.pull))
end

mode git.misc
  annotate match git.commit   -- git rev-list --all --reflog --abbrev=2 --abbrev-commit
  #annotate match git.filename -- git ls-files
  annotate match git.filename -- find -type f | sed -e 's/^.\///'
  annotate match git.ref      -- git for-each-ref --format='%(refname)%0a%(refname:short)'
  annotate external git.pull   -- origin/pull/([0-9]+) --value-match 1

  bindkey s     git.commit   git.show   -- >git show --stat=400 -p %(git.commit) | diff-highlight
  bindkey v     git.filename git.source -- >cat "%(git.filename)"
  bindkey b     git.filename git.blame  -- >git blame -- "%(git.filename)"
  bindkey l     git.commit   git.log    -- >git llll %(git.commit)
  bindkey l     git.filename git.log    -- >git llll %(git.filename)
  bindkey l     git.ref      git.log    -- >git llll %(git.ref)
  bindkey r,v   git.commit              -- ?!git revert %(git.commit)
  bindkey c,o   git.commit              -- ?!git co %(git.commit)
  bindkey c,o   git.ref                 -- ?!git co %(git.ref)
  bindkey d,d   git.ref                 -- ?!git b -d %(git.ref)
  bindkey d,S-d git.ref                 -- ?!git b -D %(git.ref)
  bindkey r,b   git.commit              -- ?!git rebase --interactive %(git.commit)
  bindkey f,u   git.commit              -- ?!git commit --fixup=%(git.commit)
  bindkey c,p   git.commit              -- ?!git cherry-pick %(git.commit)
  bindkey a     git.filename            -- !git add %(git.filename)
  bindkey r     git.filename            -- !git reset %(git.filename)
  bindkey d     git.filename git.diff   -- >git dl %(git.filename) | diff-highlight
  bindkey c     git.filename git.diff   -- >git dl --cached %(git.filename) | diff-highlight
  bindkey o     git.filename            -- ?!git co %(git.filename)
  bindkey e     git.filename            -- !vim %(git.filename)
  bindkey S-c                         -- ?!git commit
  bindkey S-a                         -- ?!git commit --amend
  bindkey S-o   git.commit              -- !xdg-open $(git hub-url --rev %(git.commit))
  bindkey S-u   git.commit              -- !xdg-open $(git hub-url --pull-request $(git pulls-for %(git.commit) | head -1 | sed -e 's/[^/]*\///g'))
end

bindkey C-x,b git.refs -- git branch --all -v --sort=-committerdate
bindkey C-x,l git.log  -- git llll --reflog --branches --remotes

##
# Search
#

mode search.results
  annotate external git.filename -- regex '([^\n]+)\n([^\n]+\n)*' --value-match 1
  annotate external search.linenumber -- regex '(?m)^[0-9]+'

  bindkey enter git.filename -- !vim %(git.filename)
  bindkey enter search.linenumber,git.filename -- !vim +%(search.linenumber) %(git.filename) -c 'normal! zz'
  #bindkey enter git.filename git.log       -- >echo "%(search.linenumber) %(git.filename)"
  bindkey S-e   git.filename         -- !i3-sensible-terminal -e 'vim %(git.filename)' &
  bindkey l     git.filename git.log -- >git llll -L$((%(search.linenumber) > 5 ? $((%(search.linenumber) - 4)) : 1)),$(($((%(search.linenumber) + 4)) > $(cat %(git.filename) | wc -l) ? $(cat %(git.filename) | wc -l) : $((%(search.linenumber) + 4)))):%(git.filename) | diff-highlight
end

mode simplesearch
  annotate external filename -- regex '(?m)^[^:]+'
  annotate external lineno   -- regex '(?m)^[^:]+:([0-9]+)' --value-match 1

  bindkey enter filename,lineno simplesearch -- >grep -n -C 3 int %(filename)
  bindkey e     filename -- !vim %(filename)
  bindkey e     filename,lineno -- !vim +%(lineno) %(filename) -c 'normal! zz'
end

##
# Todo
#

#mode todo.list
#  annotate regex todo.item -- (?m)^\s*([0-9]+)
#
#  bindkey S-i -- !td init
#  bindkey a   -- !td add "$(vipe < /dev/null)"
#  bindkey r   -- !td reorder
#
#  bindkey e     todo.item -- !td modify %(todo.item) "$(echo "$(td --all | grep "^\s*%(todo.item)" | sed -e 's/^\s*//g' | cut -d ' ' -f 4-)" | vipe)"
#  bindkey space todo.item -- !td toggle %(todo.item)
#  bindkey x     todo.item -- !td 
#end

##
# Arch Packages
#

mode pac.list
  annotate match pac.package -- pacman -Sl | cut -d' ' -f2 && pacman -Qm | cut -d' ' -f1

  bindkey enter pac.package pac.list -- >pacman -Si %(pac.package)
  bindkey i     pac.package pac.list -- >pacman -Qi %(pac.package)
  bindkey t     pac.package pac.list -- >pactree -c -d 100 %(pac.package)
end

##
# Docker
#

mode docker.containers
  annotate match docker.container -- docker container ls -a -q

  bindkey enter docker.container docker.container -- >docker container inspect %(docker.container)
end

mode docker.images
  annotate match docker.image -- docker image ls -a -q

  bindkey S-c   docker.image docker.containers -- >docker container ls -a -s --filter "ancestor=%(docker.image)"
  bindkey enter docker.image docker.image      -- >docker image inspect %(docker.image)
  bindkey S-x   docker.image                   -- ?! docker image rm %(docker.image)
end

mode docker.volumes
  annotate match docker.volume -- docker volume ls -q

  bindkey enter docker.volume docker.volume -- >docker volume inspect %(docker.volume)
end

mode external.test
  annotate external external.word -- regex '[a-z]+'
  bindkey enter external.word external.test -- >echo "%(external.word)"
end

mode diskusage
  annotate match directory -- find %(directory) -maxdepth 1 -type d

  bindkey enter directory diskusage -- >du -sh %(directory)/* | sort -h
end

mode files
  annotate match file -- ls -a1p | grep -v /
  bindkey enter file preview -- >cat %(file)
  bindkey e     file         -- !vim %(file)
  bindkey S-x   file         -- ?!rm %(file)
  bindkey S-n                -- !touch $(echo "# Enter filename to create:\n" | vipe | grep -v "^\#" | tr -d '[:space:]')
end

mode git
  annotate match commit   -- git rev-list --all --reflog --abbrev=2 --abbrev-commit

  bindkey enter commit git-show -- >git show %(commit) --stat
end

mode git-show
  annotate match filename -- git ls-tree --name-only -r %(commit)

  bindkey b     filename git-blame -- >git blame %(commit) -- %(filename)
  bindkey v     filename git-blame -- >git show %(commit):%(filename)
  bindkey enter filename git-diff  -- >git log -p --follow -1 %(commit) -- %(filename) | diff-highlight
end
