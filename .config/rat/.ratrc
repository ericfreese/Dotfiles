mode git.log
  annotate match git.commit -- git rev-list --all --reflog --abbrev=2 --abbrev-commit
  annotate match git.ref    -- git for-each-ref --format='%(refname)%0a%(refname:short)'

  bindkey enter git.commit git.show -- >git show --stat=400 -p %(git.commit) | diff-highlight
  bindkey S-r   git.commit          -- ?!git rebase --interactive %(git.commit)
  bindkey S-f   git.commit          -- ?!git commit --fixup=%(git.commit)
  bindkey S-o   git.commit          -- !xdg-open $(git hub-url --rev %(git.commit))
  bindkey S-u   git.commit          -- !xdg-open $(git hub-url --pull-request $(git pulls-for %(git.commit) | head -1 | sed -e 's/[^/]*\///g'))

  bindkey b git.commit git.blame -- >git blame %(git.commit) -- "%(git.filename)"
  bindkey d git.commit git.diff  -- >git log -p --follow -1 %(git.commit) -- "%(git.filename)" | diff-highlight
end

mode git.show
  annotate match git.filename -- git ls-tree --name-only -r %(git.commit)
  annotate external tracker.story -- regex '#([0-9]+)' --value-match 1

  bindkey enter git.filename git.diff   -- >git log -p --follow -1 %(git.commit) -- "%(git.filename)" | diff-highlight
  bindkey b     git.filename git.blame  -- >git blame %(git.commit) -- "%(git.filename)"
  bindkey l     git.filename git.log    -- >git llll --follow %(git.commit) -- "%(git.filename)"
  bindkey v     git.filename git.source -- >git show %(git.commit):"%(git.filename)"
  bindkey e     git.filename            -- !vim %(git.filename)
  bindkey S-o                           -- !xdg-open $(git hub-url --rev %(git.commit))
  bindkey S-u                           -- !xdg-open $(git hub-url --pull-request $(git pulls-for %(git.commit) | head -1 | sed -e 's/[^/]*\///g'))
  bindkey S-t   tracker.story           -- !xdg-open $(tracker-url %(tracker.story))
end

mode git.blame
  annotate match git.commit -- git log --abbrev=2 --pretty="%h" --follow -- "%(git.filename)"

  bindkey enter git.commit git.show  -- >git show --stat=400 -p %(git.commit) | diff-highlight
  bindkey b     git.commit git.blame -- >git blame %(git.commit) -- "%(git.filename)"
  bindkey S-b   git.commit git.blame -- >git blame %(git.commit)~ -- "%(git.filename)"
  bindkey e     git.filename         -- !vim %(git.filename)
  bindkey S-o   git.commit           -- !xdg-open $(git hub-url --rev %(git.commit))
  bindkey S-u   git.commit           -- !xdg-open $(git hub-url --pull-request $(git pulls-for %(git.commit) | head -1 | sed -e 's/[^/]*\///g'))
end

mode git.diff
  annotate match git.filename -- git ls-tree --name-only -r %(git.commit)

  bindkey b git.filename git.blame -- >git blame %(git.commit) -- "%(git.filename)"
  bindkey l git.filename git.log   -- >git llll %(git.commit) -- "%(git.filename)"
  bindkey e git.filename           -- !vim %(git.filename)
  bindkey S-o                      -- !xdg-open $(git hub-url --rev %(git.commit))
  bindkey S-u                      -- !xdg-open $(git hub-url --pull-request $(git pulls-for %(git.commit) | head -1 | sed -e 's/[^/]*\///g'))
end

mode git.refs
  annotate match git.ref -- git for-each-ref --format='%(refname:short)'

  bindkey f                      -- !git fetch
  bindkey S-f                    -- !git fetch --all
  bindkey enter  git.ref git.log -- >git llll %(git.ref)
  bindkey c      git.ref         -- !git checkout %(git.ref)
  bindkey r      git.ref         -- !git rebase %(git.ref)
  bindkey m      git.ref         -- !git merge %(git.ref)
  bindkey d      git.ref         -- !git branch -d %(git.ref)
  bindkey delete git.ref         -- ?!git branch -D %(git.ref)
end

mode git.source
end

mode git.misc
  annotate match git.commit   -- git rev-list --all --reflog --abbrev=2 --abbrev-commit
  #annotate match git.filename -- git ls-files
  annotate match git.filename -- find -type f | sed -e 's/^.\///'
  annotate match git.ref      -- git for-each-ref --format='%(refname)%0a%(refname:short)'

  bindkey s   git.commit   git.show   -- >git show --stat=400 -p %(git.commit) | diff-highlight
  bindkey v   git.filename git.source -- >cat "%(git.filename)"
  bindkey b   git.filename git.blame  -- >git blame -- "%(git.filename)"
  bindkey l   git.commit   git.log    -- >git llll %(git.commit)
  bindkey l   git.filename git.log    -- >git llll %(git.filename)
  bindkey l   git.ref      git.log    -- >git llll %(git.ref)
  bindkey S-r git.commit              -- ?!git rebase --interactive %(git.commit)
  bindkey S-f git.commit              -- ?!git commit --fixup=%(git.commit)
  bindkey S-p git.commit              -- ?!git cherry-pick %(git.commit)
  bindkey a   git.filename            -- !git add %(git.filename)
  bindkey r   git.filename            -- !git reset %(git.filename)
  bindkey d   git.filename git.diff   -- >git dl %(git.filename) | diff-highlight
  bindkey c   git.filename git.diff   -- >git dl --cached %(git.filename) | diff-highlight
  bindkey o   git.filename            -- ?!git co %(git.filename)
  bindkey e   git.filename            -- !vim %(git.filename)
  bindkey S-c                         -- ?!git commit
  bindkey S-a                         -- ?!git commit --amend
  bindkey S-o git.commit              -- !xdg-open $(git hub-url --rev %(git.commit))
  bindkey S-u git.commit              -- !xdg-open $(git hub-url --pull-request $(git pulls-for %(git.commit) | head -1 | sed -e 's/[^/]*\///g'))
end

bindkey C-b git.refs -- git branch --all -v --sort=-committerdate
bindkey C-l git.log  -- git llll --reflog --branches --remotes

##
# Search
#

mode search.results
  #annotate match search.filename   -- find -type f | sed -e 's/^.\///'
  annotate regex search.filename 1 -- (?m)([^\n]+)\n([^\n]+\n)*
  annotate regex search.linenumber -- ([0-9]+)

  bindkey enter search.filename -- !vim +%(search.linenumber) %(search.filename) -c 'normal! zz'
  bindkey S-e search.filename -- !i3-sensible-terminal -e 'vim %(search.filename)' &
end

##
# Todo
#

#mode todo.list
#  annotate regex todo.item -- (?m)^\s*([0-9]+)
#
#  bindkey S-i -- !td init
#  bindkey a   -- !td add "$(vipe < /dev/null)"
#  bindkey r   -- !td reorder
#
#  bindkey e     todo.item -- !td modify %(todo.item) "$(echo "$(td --all | grep "^\s*%(todo.item)" | sed -e 's/^\s*//g' | cut -d ' ' -f 4-)" | vipe)"
#  bindkey space todo.item -- !td toggle %(todo.item)
#  bindkey x     todo.item -- !td 
#end

##
# Arch Packages
#

mode pac.list
  annotate match pac.package -- pacman -Sl | cut -d' ' -f2 && pacman -Qm | cut -d' ' -f1

  bindkey enter pac.package pac.list -- >pacman -Si %(pac.package)
  bindkey i     pac.package pac.list -- >pacman -Qi %(pac.package)
  bindkey t     pac.package pac.list -- >pactree -c -d 100 %(pac.package)
end
